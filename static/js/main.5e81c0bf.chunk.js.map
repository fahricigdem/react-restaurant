{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishDetailComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","state","isNavOpen","isModalOpen","toggleNav","setState","toggleModal","handleLogin","event","console","log","username","alert","value","password","remember","checked","preventDefault","dark","expand","className","onClick","this","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Loading","baseUrl","RenderMenuItem","dish","image","Menu","dishes","menu","map","isLoading","errMess","active","Footer","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","props","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","About","leaders","title","list","tag","left","top","style","padding","object","body","heading","RenderDish","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","rating","DishDetail","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e81c0bf.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n    Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label\n} from 'reactstrap'\n\nimport { NavLink } from 'react-router-dom'\n\nclass Header extends Component {\n\n    state = {\n        isNavOpen: false,\n        isModalOpen: false\n    }\n\n    toggleNav = () => this.setState({ isNavOpen: !this.state.isNavOpen });\n\n    toggleModal = () => this.setState({ isModalOpen: !this.state.isModalOpen });\n\n    handleLogin = (event) => {\n        this.toggleModal();\n        console.log(this.username)\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"../../../react-restaurant/assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card  fa-lg\"></span> Contact Us\n                                </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst RenderMenuItem = ({ dish }) => {\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <Card>\n                <Link to={`/menu/${dish.id}`} >\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>\n                            {dish.name}\n                        </CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        </div>\n    )\n}\n\nconst Menu = ({ dishes }) => {\n\n    const menu = dishes.dishes.map(dish => <RenderMenuItem key={dish.id} dish={dish} />)\n\n    if (dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n}\n\nexport default Menu;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i> +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i> +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i> <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"m-1 btn btn-social-icon btn-google\" href=\"http://google.com/+\"> <i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"m-1 btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"> <i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"m-1 btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"m-1 btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardSubtitle, CardTitle } from 'reactstrap'\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({ item, isLoading, errMess }) {\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return (\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        )\n}\n\nconst Home = (props) => {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                        isLoading={props.dishesLoading}\n                        errMess={props.dishErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promoLoading}\n                        errMess={props.promoErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                        isLoading={props.leaderLoading}\n                        errMess={props.leaderErrMess}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport {\n    Breadcrumb, BreadcrumbItem,\n    Button, Row, Col, Label, FormText\n} from 'reactstrap';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\nimport { Link } from 'react-router-dom'\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    handleSubmit = (values) => {\n        console.log('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n\n    render() {\n        console.log('feedbacks', this.props.postFeedback);\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skpe.com\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <FormText>Minimum 3 Maximum 15 characters</FormText>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <FormText>Minimum 3 Maximum 15 characters</FormText>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <FormText>Only numbers</FormText>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <FormText>Only Valid Email</FormText>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                        <FormText>Optional</FormText>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                    <FormText>Optional</FormText>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                    <FormText>Optional</FormText>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                    <FormText>Your Infos will not be sendet actually!</FormText>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media, } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nconst About = ({ leaders }) => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    {\n                        leaders.isLoading ?\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <Loading />\n                                </div>\n                            </div>\n                            : leaders.errMess ?\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <h4>{leaders.errMess}</h4>\n                                        </div>\n                                    </div>\n                                </div>\n                                : <Media list>\n                                    <Stagger in>\n                                        {leaders.leaders.map(leader =>\n                                            <Fade in>\n                                                <Media tag=\"li\" >\n                                                    <Media left top style={{ padding: '.3rem 1rem 1rem 0' }}>\n                                                        <Media object src={baseUrl + leader.image} alt={leader.name} />\n                                                    </Media>\n                                                    <Media body>\n                                                        <Media heading>\n                                                            {leader.name}\n                                                        </Media>\n                                                        <p>{leader.designation}</p>\n                                                        <p className=\"d-none d-sm-block\">{leader.description}</p>\n                                                    </Media>\n                                                </Media>\n                                            </Fade>\n                                        )}\n                                    </Stagger>\n                                </Media>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About;","import React, { Component } from 'react'\nimport {\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\n    Button, Modal, ModalHeader, ModalBody,\n    Container, Row, Col, Label\n} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { Link } from 'react-router-dom'\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst RenderDish = (dish) => {\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n    )\n}\n\nconst RenderComments = ({ comments, postComment, dishId }) => {\n\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <h4>Comments</h4>\n            <ul className=\"list-unstyled\">\n                <Stagger in>\n                    {comments.map((comment) => {\n                        return (\n                            <Fade in>\n                                <li key={comment.id}>\n                                    <p>{comment.comment}</p>\n                                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\n                                </li>\n                            </Fade>\n                        );\n                    })}\n                </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment} />\n        </div>\n    )\n}\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    state = { isModalOpen: false }\n\n    toggleModal = () => this.setState({ isModalOpen: !this.state.isModalOpen });\n\n    handleSubmit = (values) => {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <>\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <Container>\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"rating\">Raiting</Label>\n\n                                    <Control.select model=\".raiting\" name=\"raiting\"\n                                        className=\"form-control\">\n                                        <option value=\"\">Select</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"author\">Your Name</Label>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"comment\" >Comment</Label>\n\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\"\n                                        className=\"form-control\" />\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                                </Row>\n                            </LocalForm>\n                        </Container>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}\n\n\nconst DishDetail = ({ dish, isLoading, errMess, comments, postComment }) => {\n    console.log('comments', postComment)\n\n    if (isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (dish != null)\n        return (\n            <div className=\"container\" >\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {RenderDish(dish)}\n                    <RenderComments comments={comments}\n                        postComment={postComment}\n                        dishId={dish.id}\n                    />\n                </div>\n            </div>\n        );\n\n}\n\nexport default DishDetail;","export const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\n\n","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\n};\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message\n    };\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addFeedback(response)))\n        .catch(error => { console.log('post feedbacks', error.message); alert('Your Feedback could not be posted\\nError: ' + error.message); });\n};\n\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});","import React, { Component } from 'react'\nimport Header from './HeaderComponent'\nimport Menu from './MenuComponent'\nimport Footer from './FooterComponent'\nimport Home from './HomeComponent'\nimport Contact from './ContactComponent'\nimport About from './AboutComponent'\nimport DishDetail from './DishDetailComponent'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\n    fetchDishes: () => { dispatch(fetchDishes()) },\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders())\n});\n\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            )\n        }\n\n        const DishWithId = ({ match }) => {\n            return (\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        };\n\n        return (\n            <div>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={500}>\n                        <Switch>\n                            <Route path=\"/home\" component={HomePage} />\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route exact path=\"/menu/:dishId\" component={DishWithId} />\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n                            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\n\n        case ActionTypes.DISHES_LOADING:\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\n\n        case ActionTypes.DISHES_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return { ...state, errMess: null, comments: action.payload };\n\n        case ActionTypes.COMMENTS_FAILED:\n            return { ...state, errMess: action.payload };\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment) };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\n\n        case ActionTypes.PROMOS_LOADING:\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\n\n        case ActionTypes.PROMOS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\n\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\n\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","\nimport React, { Component } from 'react';\nimport Main from './components/MainComponent'\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}